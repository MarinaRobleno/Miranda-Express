LOOP ROOMS:

for (let room of rooms){
    const toInsert = {
        photo: room.photo,
        roomNumber: room.roomNumber,
        roomType: room.room_type,
        amenities: room.amenities,
        price: room.price,
        offer_price: room.offer_price,
        status: room.status
    }
    connection.query('INSERT INTO rooms SET?', toInsert, function (error, results, fields) {
  if (error) throw error;
  // Neat!
});
} 

// - //

LOOP BOOKINGS:

for (let book of bookings){
    const toInsert = {
        guest: book.guest,
        orderDate: book.orderDate,
        checkIn: book.checkIn,
        checkOut: book.checkOut,
        special: book.special,
        status: book.status,
    }
    connection.query('INSERT INTO bookings SET?', toInsert, function (error, results, fields) {
  if (error) throw error;
  // Neat!
});
} 

// - //

CREATE TABLE ROOMS:

CREATE TABLE IF NOT EXISTS rooms(
    roomId INT AUTO_INCREMENT PRIMARY KEY,
   photo MEDIUMTEXT,
   roomNumber VARCHAR(255) NOT NULL,
   roomType VARCHAR(255) NOT NULL,
    amenities VARCHAR(255),
    price INT NOT NULL,
    offer_price INT,
    status BOOLEAN
)ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS bookings(
    bookId INT AUTO_INCREMENT PRIMARY KEY,
    guest VARCHAR(255) NOT NULL,
    orderDate DATE,
    checkIn DATE,
    checkOut DATE,
    special TEXT,
    status BOOLEAN
    FOREIGN KEY (roomType)
        REFERENCES rooms(roomType)
    FOREIGN KEY (roomNumber)
        REFERENCES rooms(roomNumber)
        ON UPDATE CASCADE
        ON DELETE SET NULL
) ENGINE=INNODB;
